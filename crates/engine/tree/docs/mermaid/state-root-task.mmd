flowchart TD
    subgraph PrewarmTask[Prewarming Task]
        TransactionQueue[Transaction Queue]
        --> ChunkTransactions[Chunk transactions for parallel execution]
        --> SpawnWorkers[Spawn concurrent workers (max 64)]
        --> ExecuteTransaction[Execute transaction optimistically]
        --> ExtractProofTargets[Extract proof targets from execution]
        --> SendToMultiProof[Send MultiProofMessage::PrefetchProofs]
        --> CheckTermination{{Early termination signal?}}
        CheckTermination -->|No| TransactionQueue
        CheckTermination -->|Yes| SaveCache[Save execution state to cache]
    end

    subgraph MultiProofTask[MultiProof Task]
        ReceivePrefetch[Receive PrefetchProofs]
        ReceiveStateUpdate[Receive StateUpdate]
        ReceiveFinished[Receive FinishedStateUpdates]
        
        DeduplicateTargets[Deduplicate proof targets]
        GenerateProofs[Generate MPT proofs in parallel]
        SequenceProofs[Sequence completed proofs]
        SendSparseUpdate[Send SparseTrieUpdate]
        
        ReceivePrefetch --> DeduplicateTargets
        ReceiveStateUpdate --> DeduplicateTargets
        DeduplicateTargets --> GenerateProofs
        GenerateProofs --> SequenceProofs
        SequenceProofs --> SendSparseUpdate
        ReceiveFinished --> SequenceProofs
    end

    subgraph SparseTrieTask[Sparse Trie Task]
        ReceiveUpdates[Receive SparseTrieUpdate]
        --> BatchAccumulate[Batch accumulate updates]
        --> RevealProofs[Reveal multiproof in sparse trie]
        --> ParallelStorage[Update storage tries in parallel]
        --> UpdateAccounts[Update accounts trie]
        --> CalculateHashes[Calculate incremental hashes]
        --> CheckComplete{{Channel closed?}}
        CheckComplete -->|No| ReceiveUpdates
        CheckComplete -->|Yes| FinalRoot[Calculate final state root]
        --> ReturnOutcome[Return StateRootComputeOutcome]
    end

    subgraph SequentialExecution[Sequential Execution]
        ExecuteSeq[Execute transactions sequentially]
        --> CollectStateUpdates[Collect state updates]
        --> SendStateUpdate[Send MultiProofMessage::StateUpdate]
        --> CheckFinished{{All transactions done?}}
        CheckFinished -->|No| ExecuteSeq
        CheckFinished -->|Yes| SendFinished[Send FinishedStateUpdates]
    end

    SendToMultiProof --> ReceivePrefetch
    SendStateUpdate --> ReceiveStateUpdate
    SendFinished --> ReceiveFinished
    SendSparseUpdate --> ReceiveUpdates
    ReturnOutcome --> PayloadHandle[PayloadHandle receives state root]
